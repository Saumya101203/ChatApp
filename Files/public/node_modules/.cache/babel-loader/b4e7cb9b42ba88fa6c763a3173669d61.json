{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar bind = require('./helpers/bind');\n\nvar Axios = require('./core/Axios');\n\nvar mergeConfig = require('./core/mergeConfig');\n\nvar defaults = require('./defaults');\n\nvar formDataToJSON = require('./helpers/formDataToJSON');\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context); // Factory for creating new instances\n\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n} // Create the default instance to be exported\n\n\nvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Expose Cancel & CancelToken\n\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData'); // Expose AxiosError class\n\naxios.AxiosError = require('../lib/core/AxiosError'); // alias for CanceledError for backward compatibility\n\naxios.Cancel = axios.CanceledError; // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = require('./helpers/spread'); // Expose isAxiosError\n\naxios.isAxiosError = require('./helpers/isAxiosError');\n\naxios.formToJSON = function (thing) {\n  return formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n};\n\nmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = axios;","map":{"version":3,"sources":["C:/Users/dell/Desktop/ChatWebApp/Files/public/node_modules/axios/lib/axios.js"],"names":["utils","require","bind","Axios","mergeConfig","defaults","formDataToJSON","createInstance","defaultConfig","context","instance","prototype","request","extend","create","instanceConfig","axios","CanceledError","CancelToken","isCancel","VERSION","version","toFormData","AxiosError","Cancel","all","promises","Promise","spread","isAxiosError","formToJSON","thing","isHTMLForm","FormData","module","exports","default"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,0BAAD,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,cAAT,CAAwBC,aAAxB,EAAuC;AACrC,MAAIC,OAAO,GAAG,IAAIN,KAAJ,CAAUK,aAAV,CAAd;AACA,MAAIE,QAAQ,GAAGR,IAAI,CAACC,KAAK,CAACQ,SAAN,CAAgBC,OAAjB,EAA0BH,OAA1B,CAAnB,CAFqC,CAIrC;;AACAT,EAAAA,KAAK,CAACa,MAAN,CAAaH,QAAb,EAAuBP,KAAK,CAACQ,SAA7B,EAAwCF,OAAxC,EALqC,CAOrC;;AACAT,EAAAA,KAAK,CAACa,MAAN,CAAaH,QAAb,EAAuBD,OAAvB,EARqC,CAUrC;;AACAC,EAAAA,QAAQ,CAACI,MAAT,GAAkB,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAChD,WAAOR,cAAc,CAACH,WAAW,CAACI,aAAD,EAAgBO,cAAhB,CAAZ,CAArB;AACD,GAFD;;AAIA,SAAOL,QAAP;AACD,C,CAED;;;AACA,IAAIM,KAAK,GAAGT,cAAc,CAACF,QAAD,CAA1B,C,CAEA;;AACAW,KAAK,CAACb,KAAN,GAAcA,KAAd,C,CAEA;;AACAa,KAAK,CAACC,aAAN,GAAsBhB,OAAO,CAAC,wBAAD,CAA7B;AACAe,KAAK,CAACE,WAAN,GAAoBjB,OAAO,CAAC,sBAAD,CAA3B;AACAe,KAAK,CAACG,QAAN,GAAiBlB,OAAO,CAAC,mBAAD,CAAxB;AACAe,KAAK,CAACI,OAAN,GAAgBnB,OAAO,CAAC,YAAD,CAAP,CAAsBoB,OAAtC;AACAL,KAAK,CAACM,UAAN,GAAmBrB,OAAO,CAAC,sBAAD,CAA1B,C,CAEA;;AACAe,KAAK,CAACO,UAAN,GAAmBtB,OAAO,CAAC,wBAAD,CAA1B,C,CAEA;;AACAe,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACC,aAArB,C,CAEA;;AACAD,KAAK,CAACS,GAAN,GAAY,SAASA,GAAT,CAAaC,QAAb,EAAuB;AACjC,SAAOC,OAAO,CAACF,GAAR,CAAYC,QAAZ,CAAP;AACD,CAFD;;AAGAV,KAAK,CAACY,MAAN,GAAe3B,OAAO,CAAC,kBAAD,CAAtB,C,CAEA;;AACAe,KAAK,CAACa,YAAN,GAAqB5B,OAAO,CAAC,wBAAD,CAA5B;;AAEAe,KAAK,CAACc,UAAN,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOzB,cAAc,CAACN,KAAK,CAACgC,UAAN,CAAiBD,KAAjB,IAA0B,IAAIE,QAAJ,CAAaF,KAAb,CAA1B,GAAgDA,KAAjD,CAArB;AACD,CAFD;;AAIAG,MAAM,CAACC,OAAP,GAAiBnB,KAAjB,C,CAEA;;AACAkB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBpB,KAAzB","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\nvar formDataToJSON = require('./helpers/formDataToJSON');\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\naxios.formToJSON = function(thing) {\n  return formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n};\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n"]},"metadata":{},"sourceType":"script"}