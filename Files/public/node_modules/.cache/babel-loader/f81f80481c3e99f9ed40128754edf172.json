{"ast":null,"code":"'use strict';\n\nvar bind = require('./helpers/bind'); // utils is a library of generic helper functions non-specific to axios\n\n\nvar toString = Object.prototype.toString; // eslint-disable-next-line func-names\n\nvar kindOf = function (cache) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n}(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\n\n\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\n\n\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\n\n\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\n\nfunction isArrayBufferView(val) {\n  var result;\n\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && isArrayBuffer(val.buffer);\n  }\n\n  return result;\n}\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\n\n\nfunction isString(val) {\n  return typeof val === 'string';\n}\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\n\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\n\n\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\n\n\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Determine if a value is a empty Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a empty Object, otherwise false\n */\n\n\nfunction isEmptyObject(val) {\n  return val && Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n}\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\n\n\nvar isDate = kindOfTest('Date');\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\n\nvar isFile = kindOfTest('File');\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\n\nvar isBlob = kindOfTest('Blob');\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\n\nvar isFileList = kindOfTest('FileList');\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\n\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\n\n\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\n\n\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (typeof FormData === 'function' && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);\n}\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\n\n\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\n\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n}\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\n\n\nfunction isStandardBrowserEnv() {\n  var product;\n\n  if (typeof navigator !== 'undefined' && ((product = navigator.product) === 'ReactNative' || product === 'NativeScript' || product === 'NS')) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\n\n\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  } // Force an array if not already something iterable\n\n\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\n\n\nfunction\n  /* obj1, obj2, obj3, ... */\nmerge() {\n  var result = {};\n\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n\n  return result;\n}\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\n\n\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\n\n\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n\n  return content;\n}\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n * @returns {Object}\n */\n\n\nfunction toFlatObject(sourceObj, destObj, filter, propFilter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n  destObj = destObj || {}; // eslint-disable-next-line no-eq-null,eqeqeq\n\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n\n    while (i-- > 0) {\n      prop = props[i];\n\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n\n    sourceObj = filter !== false && Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\n\n\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n/**\n * Returns new array from array like object or null if failed\n * @param {*} [thing]\n * @returns {?Array}\n */\n\n\nfunction toArray(thing) {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  var i = thing.length;\n  if (!isNumber(i)) return null;\n  var arr = new Array(i);\n\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n\n  return arr;\n} // eslint-disable-next-line func-names\n\n\nvar isTypedArray = function (TypedArray) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n}(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nfunction forEachEntry(obj, fn) {\n  var generator = obj && obj[Symbol.iterator];\n  var iterator = generator.call(obj);\n  var result;\n\n  while ((result = iterator.next()) && !result.done) {\n    var pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\nfunction matchAll(regExp, str) {\n  var matches;\n  var arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\nvar isHTMLForm = kindOfTest('HTMLFormElement');\n\nvar hasOwnProperty = function resolver(_hasOwnProperty) {\n  return function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n  };\n}(Object.prototype.hasOwnProperty);\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmptyObject: isEmptyObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList,\n  forEachEntry: forEachEntry,\n  matchAll: matchAll,\n  isHTMLForm: isHTMLForm,\n  hasOwnProperty: hasOwnProperty\n};","map":{"version":3,"sources":["C:/Users/dell/Desktop/ChatWebApp/Files/public/node_modules/axios/lib/utils.js"],"names":["bind","require","toString","Object","prototype","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","isKindOf","isArray","val","Array","isUndefined","isBuffer","constructor","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","getPrototypeOf","isEmptyObject","keys","length","isDate","isFile","isBlob","isFileList","isFunction","isStream","pipe","isFormData","pattern","FormData","isURLSearchParams","trim","replace","isStandardBrowserEnv","product","navigator","window","document","forEach","obj","fn","i","l","key","hasOwnProperty","merge","assignValue","arguments","extend","a","b","thisArg","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","assign","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","getOwnPropertyNames","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","Symbol","iterator","next","done","pair","value","matchAll","regExp","matches","exec","push","isHTMLForm","resolver","_hasOwnProperty","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a empty Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a empty Object, otherwise false\n */\nfunction isEmptyObject(val) {\n  return val && Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  var product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter, propFilter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n * @param {*} [thing]\n * @returns {?Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  var i = thing.length;\n  if (!isNumber(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nfunction forEachEntry(obj, fn) {\n  var generator = obj && obj[Symbol.iterator];\n\n  var iterator = generator.call(obj);\n\n  var result;\n\n  while ((result = iterator.next()) && !result.done) {\n    var pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\nfunction matchAll(regExp, str) {\n  var matches;\n  var arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\nvar isHTMLForm = kindOfTest('HTMLFormElement');\n\nvar hasOwnProperty = (function resolver(_hasOwnProperty) {\n  return function(obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n  };\n})(Object.prototype.hasOwnProperty);\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmptyObject: isEmptyObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList,\n  forEachEntry: forEachEntry,\n  matchAll: matchAll,\n  isHTMLForm: isHTMLForm,\n  hasOwnProperty: hasOwnProperty\n};\n"]},"metadata":{},"sourceType":"script"}